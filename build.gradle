import org.liquibase.gradle.LiquibaseTask

plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'org.liquibase.gradle' version "${liquibaseGradlePluginVersion}"
	id 'java'
}

group = 'ru.brobrocode'
version = '1.0.0'
description = 'Application for integration with hh.ru'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	liquibaseRuntime.extendsFrom runtime
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${springCloudStarterOpenFeignVersion}"
	implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApiVersion}"
	implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
	implementation "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"
	implementation "com.google.code.findbugs:jsr305:${jsr305Version}"
	implementation "io.github.openfeign:feign-okhttp:${feignOkhttpVersion}"
	implementation "io.github.openfeign:feign-jackson:${feignJacksonVersion}"
	implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"

	// LIQUIBASE
	implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
	liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseVersion}"
	liquibaseRuntime "org.postgresql:postgresql:${postgresqlVersion}"
	liquibaseRuntime "info.picocli:picocli:${picocliVersion}"

	// DATABASE
	runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// TEST
	testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
	testImplementation "javax.servlet:javax.servlet-api:${javaxServletApiVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "com.h2database:h2:${h2Version}"
}

liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/db.changelog-master.xml'
			url project.findProperty('liquibase.url') ?: 'jdbc:postgresql://localhost:5432/cadra'
			username project.findProperty('liquibase.username') ?: 'admin'
			password project.findProperty('liquibase.password') ?: 'admin'
			driver 'org.postgresql.Driver'
		}
	}
	runList = 'main'
}
